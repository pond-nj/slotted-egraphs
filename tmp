warning: variable `getExpandChildrenArms` should have a snake case name
  --> slotted-egraphs-derive/src/lib.rs:87:9
   |
87 |     let getExpandChildrenArms: Vec<TokenStream2> = ie
   |         ^^^^^^^^^^^^^^^^^^^^^ help: convert the identifier to snake case: `get_expand_children_arms`
   |
   = note: `#[warn(non_snake_case)]` on by default

warning: variable `getExpandChildrenArms` should have a snake case name
   --> slotted-egraphs-derive/src/lib.rs:184:24
    |
184 |                     #(#getExpandChildrenArms),*
    |                        ^^^^^^^^^^^^^^^^^^^^^ help: convert the identifier to snake case: `get_expand_children_arms`

warning: function `produceGetExpandChildrenArms` should have a snake case name
   --> slotted-egraphs-derive/src/lib.rs:422:4
    |
422 | fn produceGetExpandChildrenArms(name: &Ident, v: &Variant) -> TokenStream2 {
    |    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: convert the identifier to snake case: `produce_get_expand_children_arms`

warning: `slotted-egraphs-derive` (lib) generated 3 warnings
   Compiling slotted-egraphs v0.0.36 (/home/pondnj/chc/project/slotted-egraphs)
warning: unused variable: `id`
   --> src/lang.rs:146:34
    |
146 |     fn expandChildren(&mut self, id: AppliedId) {}
    |                                  ^^ help: if this is intentional, prefix it with an underscore: `_id`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `id`
   --> src/lang.rs:195:34
    |
195 |     fn expandChildren(&mut self, id: AppliedId) {}
    |                                  ^^ help: if this is intentional, prefix it with an underscore: `_id`

warning: unused variable: `id`
   --> src/lang.rs:233:42
    |
233 |               fn expandChildren(&mut self, id: AppliedId) {}
    |                                            ^^ help: if this is intentional, prefix it with an underscore: `_id`
...
241 | / bare_language_child!(
242 | |     u128, u64, u32, u16, u8, i128, i64, i32, i16, i8, usize, isize, bool, char, Symbol, String
243 | | );
    | |_- in this macro invocation
    |
    = note: this warning originates in the macro `bare_language_child` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: unused variable: `id`
   --> src/lang.rs:322:34
    |
322 |     fn expandChildren(&mut self, id: AppliedId) {}
    |                                  ^^ help: if this is intentional, prefix it with an underscore: `_id`

warning: unused variable: `id`
   --> src/lang.rs:387:34
    |
387 |     fn expandChildren(&mut self, id: AppliedId) {}
    |                                  ^^ help: if this is intentional, prefix it with an underscore: `_id`

warning: unused variable: `id`
   --> src/lang.rs:469:34
    |
469 |     fn expandChildren(&mut self, id: AppliedId) {}
    |                                  ^^ help: if this is intentional, prefix it with an underscore: `_id`

warning: unused variable: `enode`
  --> src/egraph/union.rs:22:31
   |
22 |         if let Pattern::ENode(enode, children) = pattern {
   |                               ^^^^^ help: if this is intentional, prefix it with an underscore: `_enode`

warning: unused variable: `n`
  --> src/egraph/union.rs:26:35
   |
26 |                     Pattern::Star(n) => {
   |                                   ^ help: if this is intentional, prefix it with an underscore: `_n`

warning: `slotted-egraphs` (lib) generated 23 warnings (23 duplicates)
error[E0308]: mismatched types
    --> tests/arith/mod.rs:20:1
     |
20   | / define_language! {
21   | |     pub enum Arith {
22   | |         // lambda calculus:
23   | |         Lam(Bind<AppliedId>) = "lam",
...    |
35   | | }
     | | ^
     | | |
     | |_expected `LanguageChildrenType`, found `()`
     |   arguments to this method are incorrect
     |
note: method `expandChildren` modifies its receiver in-place
    --> tests/arith/mod.rs:20:1
     |
20   | / define_language! {
21   | |     pub enum Arith {
22   | |         // lambda calculus:
23   | |         Lam(Bind<AppliedId>) = "lam",
...    |
35   | | }
     | |_^ this call modifies `a0` in-place
note: method defined here
    --> /home/pondnj/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/vec/mod.rs:2474:12
     |
2474 |     pub fn push(&mut self, value: T) {
     |            ^^^^
     = note: this error originates in the macro `define_language` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
  --> tests/arith/mod.rs:20:1
   |
20 | / define_language! {
21 | |     pub enum Arith {
22 | |         // lambda calculus:
23 | |         Lam(Bind<AppliedId>) = "lam",
...  |
35 | | }
   | | ^- expected `()` because of default return type
   | |_|
   |   expected `()`, found `Vec<LanguageChildrenType>`
   |
   = note: expected unit type `()`
                 found struct `std::vec::Vec<slotted_egraphs::LanguageChildrenType>`
   = note: this error originates in the macro `define_language` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
    --> tests/arith/mod.rs:20:1
     |
20   | / define_language! {
21   | |     pub enum Arith {
22   | |         // lambda calculus:
23   | |         Lam(Bind<AppliedId>) = "lam",
...    |
35   | | }
     | | ^
     | | |
     | |_expected `LanguageChildrenType`, found `()`
     |   arguments to this method are incorrect
     |
note: method `expandChildren` modifies its receiver in-place
    --> tests/arith/mod.rs:20:1
     |
20   | / define_language! {
21   | |     pub enum Arith {
22   | |         // lambda calculus:
23   | |         Lam(Bind<AppliedId>) = "lam",
...    |
35   | | }
     | |_^ this call modifies `a1` in-place
note: method defined here
    --> /home/pondnj/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/vec/mod.rs:2474:12
     |
2474 |     pub fn push(&mut self, value: T) {
     |            ^^^^
     = note: this error originates in the macro `define_language` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
    --> tests/lambda/mod.rs:37:1
     |
37   | / define_language! {
38   | |     pub enum Lambda {
39   | |         Lam(Bind<AppliedId>) = "lam",
40   | |         App(AppliedId, AppliedId) = "app",
...    |
44   | | }
     | | ^
     | | |
     | |_expected `LanguageChildrenType`, found `()`
     |   arguments to this method are incorrect
     |
note: method `expandChildren` modifies its receiver in-place
    --> tests/lambda/mod.rs:37:1
     |
37   | / define_language! {
38   | |     pub enum Lambda {
39   | |         Lam(Bind<AppliedId>) = "lam",
40   | |         App(AppliedId, AppliedId) = "app",
...    |
44   | | }
     | |_^ this call modifies `a0` in-place
note: method defined here
    --> /home/pondnj/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/vec/mod.rs:2474:12
     |
2474 |     pub fn push(&mut self, value: T) {
     |            ^^^^
     = note: this error originates in the macro `define_language` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
  --> tests/lambda/mod.rs:37:1
   |
37 | / define_language! {
38 | |     pub enum Lambda {
39 | |         Lam(Bind<AppliedId>) = "lam",
40 | |         App(AppliedId, AppliedId) = "app",
...  |
44 | | }
   | | ^- expected `()` because of default return type
   | |_|
   |   expected `()`, found `Vec<LanguageChildrenType>`
   |
   = note: expected unit type `()`
                 found struct `std::vec::Vec<slotted_egraphs::LanguageChildrenType>`
   = note: this error originates in the macro `define_language` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
    --> tests/lambda/mod.rs:37:1
     |
37   | / define_language! {
38   | |     pub enum Lambda {
39   | |         Lam(Bind<AppliedId>) = "lam",
40   | |         App(AppliedId, AppliedId) = "app",
...    |
44   | | }
     | | ^
     | | |
     | |_expected `LanguageChildrenType`, found `()`
     |   arguments to this method are incorrect
     |
note: method `expandChildren` modifies its receiver in-place
    --> tests/lambda/mod.rs:37:1
     |
37   | / define_language! {
38   | |     pub enum Lambda {
39   | |         Lam(Bind<AppliedId>) = "lam",
40   | |         App(AppliedId, AppliedId) = "app",
...    |
44   | | }
     | |_^ this call modifies `a1` in-place
note: method defined here
    --> /home/pondnj/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/vec/mod.rs:2474:12
     |
2474 |     pub fn push(&mut self, value: T) {
     |            ^^^^
     = note: this error originates in the macro `define_language` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
    --> tests/rise/mod.rs:13:1
     |
13   | / define_language! {
14   | |     pub enum Rise {
15   | |         // lambda calculus:
16   | |         Lam(Bind<AppliedId>) = "lam",
...    |
25   | | }
     | | ^
     | | |
     | |_expected `LanguageChildrenType`, found `()`
     |   arguments to this method are incorrect
     |
note: method `expandChildren` modifies its receiver in-place
    --> tests/rise/mod.rs:13:1
     |
13   | / define_language! {
14   | |     pub enum Rise {
15   | |         // lambda calculus:
16   | |         Lam(Bind<AppliedId>) = "lam",
...    |
25   | | }
     | |_^ this call modifies `a0` in-place
note: method defined here
    --> /home/pondnj/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/vec/mod.rs:2474:12
     |
2474 |     pub fn push(&mut self, value: T) {
     |            ^^^^
     = note: this error originates in the macro `define_language` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
  --> tests/rise/mod.rs:13:1
   |
13 | / define_language! {
14 | |     pub enum Rise {
15 | |         // lambda calculus:
16 | |         Lam(Bind<AppliedId>) = "lam",
...  |
25 | | }
   | | ^- expected `()` because of default return type
   | |_|
   |   expected `()`, found `Vec<LanguageChildrenType>`
   |
   = note: expected unit type `()`
                 found struct `std::vec::Vec<slotted_egraphs::LanguageChildrenType>`
   = note: this error originates in the macro `define_language` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
    --> tests/rise/mod.rs:13:1
     |
13   | / define_language! {
14   | |     pub enum Rise {
15   | |         // lambda calculus:
16   | |         Lam(Bind<AppliedId>) = "lam",
...    |
25   | | }
     | | ^
     | | |
     | |_expected `LanguageChildrenType`, found `()`
     |   arguments to this method are incorrect
     |
note: method `expandChildren` modifies its receiver in-place
    --> tests/rise/mod.rs:13:1
     |
13   | / define_language! {
14   | |     pub enum Rise {
15   | |         // lambda calculus:
16   | |         Lam(Bind<AppliedId>) = "lam",
...    |
25   | | }
     | |_^ this call modifies `a1` in-place
note: method defined here
    --> /home/pondnj/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/vec/mod.rs:2474:12
     |
2474 |     pub fn push(&mut self, value: T) {
     |            ^^^^
     = note: this error originates in the macro `define_language` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: `slotted-egraphs` (lib test) generated 23 warnings (15 duplicates)
error[E0308]: mismatched types
    --> tests/var/mod.rs:8:1
     |
8    | / define_language! {
9    | |     pub enum Var {
10   | |         F(Slot, Slot) = "f",
11   | |     }
12   | | }
     | | ^
     | | |
     | |_expected `LanguageChildrenType`, found `()`
     |   arguments to this method are incorrect
     |
note: method `expandChildren` modifies its receiver in-place
    --> tests/var/mod.rs:8:1
     |
8    | / define_language! {
9    | |     pub enum Var {
10   | |         F(Slot, Slot) = "f",
11   | |     }
12   | | }
     | |_^ this call modifies `a0` in-place
note: method defined here
    --> /home/pondnj/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/vec/mod.rs:2474:12
     |
2474 |     pub fn push(&mut self, value: T) {
     |            ^^^^
     = note: this error originates in the macro `define_language` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
    --> tests/var/mod.rs:8:1
     |
8    | / define_language! {
9    | |     pub enum Var {
10   | |         F(Slot, Slot) = "f",
11   | |     }
12   | | }
     | | ^
     | | |
     | |_expected `LanguageChildrenType`, found `()`
     |   arguments to this method are incorrect
     |
note: method `expandChildren` modifies its receiver in-place
    --> tests/var/mod.rs:8:1
     |
8    | / define_language! {
9    | |     pub enum Var {
10   | |         F(Slot, Slot) = "f",
11   | |     }
12   | | }
     | |_^ this call modifies `a1` in-place
note: method defined here
    --> /home/pondnj/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/vec/mod.rs:2474:12
     |
2474 |     pub fn push(&mut self, value: T) {
     |            ^^^^
     = note: this error originates in the macro `define_language` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
  --> tests/var/mod.rs:8:1
   |
8  | / define_language! {
9  | |     pub enum Var {
10 | |         F(Slot, Slot) = "f",
11 | |     }
12 | | }
   | | ^- expected `()` because of default return type
   | |_|
   |   expected `()`, found `Vec<LanguageChildrenType>`
   |
   = note: expected unit type `()`
                 found struct `std::vec::Vec<slotted_egraphs::LanguageChildrenType>`
   = note: this error originates in the macro `define_language` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
    --> tests/fgh/mod.rs:9:1
     |
9    | / define_language! {
10   | |     pub enum Fgh {
11   | |         F(Slot, Slot) = "f",
12   | |         G(Slot, Slot) = "g",
...    |
15   | | }
     | | ^
     | | |
     | |_expected `LanguageChildrenType`, found `()`
     |   arguments to this method are incorrect
     |
note: method `expandChildren` modifies its receiver in-place
    --> tests/fgh/mod.rs:9:1
     |
9    | / define_language! {
10   | |     pub enum Fgh {
11   | |         F(Slot, Slot) = "f",
12   | |         G(Slot, Slot) = "g",
...    |
15   | | }
     | |_^ this call modifies `a0` in-place
note: method defined here
    --> /home/pondnj/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/vec/mod.rs:2474:12
     |
2474 |     pub fn push(&mut self, value: T) {
     |            ^^^^
     = note: this error originates in the macro `define_language` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
    --> tests/fgh/mod.rs:9:1
     |
9    | / define_language! {
10   | |     pub enum Fgh {
11   | |         F(Slot, Slot) = "f",
12   | |         G(Slot, Slot) = "g",
...    |
15   | | }
     | | ^
     | | |
     | |_expected `LanguageChildrenType`, found `()`
     |   arguments to this method are incorrect
     |
note: method `expandChildren` modifies its receiver in-place
    --> tests/fgh/mod.rs:9:1
     |
9    | / define_language! {
10   | |     pub enum Fgh {
11   | |         F(Slot, Slot) = "f",
12   | |         G(Slot, Slot) = "g",
...    |
15   | | }
     | |_^ this call modifies `a1` in-place
note: method defined here
    --> /home/pondnj/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/vec/mod.rs:2474:12
     |
2474 |     pub fn push(&mut self, value: T) {
     |            ^^^^
     = note: this error originates in the macro `define_language` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
  --> tests/fgh/mod.rs:9:1
   |
9  | / define_language! {
10 | |     pub enum Fgh {
11 | |         F(Slot, Slot) = "f",
12 | |         G(Slot, Slot) = "g",
...  |
15 | | }
   | | ^- expected `()` because of default return type
   | |_|
   |   expected `()`, found `Vec<LanguageChildrenType>`
   |
   = note: expected unit type `()`
                 found struct `std::vec::Vec<slotted_egraphs::LanguageChildrenType>`
   = note: this error originates in the macro `define_language` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
    --> tests/sdql/mod.rs:11:1
     |
11   | / define_language! {
12   | |     pub enum Sdql {
13   | |         Lam(Bind<AppliedId>) = "lambda",
14   | |         Var(Slot) = "var",
...    |
18   | | }
     | | ^
     | | |
     | |_expected `LanguageChildrenType`, found `()`
     |   arguments to this method are incorrect
     |
note: method `expandChildren` modifies its receiver in-place
    --> tests/sdql/mod.rs:11:1
     |
11   | / define_language! {
12   | |     pub enum Sdql {
13   | |         Lam(Bind<AppliedId>) = "lambda",
14   | |         Var(Slot) = "var",
...    |
18   | | }
     | |_^ this call modifies `a0` in-place
note: method defined here
    --> /home/pondnj/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/vec/mod.rs:2474:12
     |
2474 |     pub fn push(&mut self, value: T) {
     |            ^^^^
     = note: this error originates in the macro `define_language` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
  --> tests/sdql/mod.rs:11:1
   |
11 | / define_language! {
12 | |     pub enum Sdql {
13 | |         Lam(Bind<AppliedId>) = "lambda",
14 | |         Var(Slot) = "var",
...  |
18 | | }
   | | ^- expected `()` because of default return type
   | |_|
   |   expected `()`, found `Vec<LanguageChildrenType>`
   |
   = note: expected unit type `()`
                 found struct `std::vec::Vec<slotted_egraphs::LanguageChildrenType>`
   = note: this error originates in the macro `define_language` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
    --> tests/sdql/mod.rs:11:1
     |
11   | / define_language! {
12   | |     pub enum Sdql {
13   | |         Lam(Bind<AppliedId>) = "lambda",
14   | |         Var(Slot) = "var",
...    |
18   | | }
     | | ^
     | | |
     | |_expected `LanguageChildrenType`, found `()`
     |   arguments to this method are incorrect
     |
note: method `expandChildren` modifies its receiver in-place
    --> tests/sdql/mod.rs:11:1
     |
11   | / define_language! {
12   | |     pub enum Sdql {
13   | |         Lam(Bind<AppliedId>) = "lambda",
14   | |         Var(Slot) = "var",
...    |
18   | | }
     | |_^ this call modifies `a1` in-place
note: method defined here
    --> /home/pondnj/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/vec/mod.rs:2474:12
     |
2474 |     pub fn push(&mut self, value: T) {
     |            ^^^^
     = note: this error originates in the macro `define_language` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
    --> tests/array/mod.rs:5:1
     |
5    | / define_language! {
6    | |     pub enum ArrayLang {
7    | |         // lambda calculus:
8    | |         Lam(Slot, AppliedId) = "lam",
...    |
17   | | }
     | | ^
     | | |
     | |_expected `LanguageChildrenType`, found `()`
     |   arguments to this method are incorrect
     |
note: method `expandChildren` modifies its receiver in-place
    --> tests/array/mod.rs:5:1
     |
5    | / define_language! {
6    | |     pub enum ArrayLang {
7    | |         // lambda calculus:
8    | |         Lam(Slot, AppliedId) = "lam",
...    |
17   | | }
     | |_^ this call modifies `a0` in-place
note: method defined here
    --> /home/pondnj/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/vec/mod.rs:2474:12
     |
2474 |     pub fn push(&mut self, value: T) {
     |            ^^^^
     = note: this error originates in the macro `define_language` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
    --> tests/array/mod.rs:5:1
     |
5    | / define_language! {
6    | |     pub enum ArrayLang {
7    | |         // lambda calculus:
8    | |         Lam(Slot, AppliedId) = "lam",
...    |
17   | | }
     | | ^
     | | |
     | |_expected `LanguageChildrenType`, found `()`
     |   arguments to this method are incorrect
     |
note: method `expandChildren` modifies its receiver in-place
    --> tests/array/mod.rs:5:1
     |
5    | / define_language! {
6    | |     pub enum ArrayLang {
7    | |         // lambda calculus:
8    | |         Lam(Slot, AppliedId) = "lam",
...    |
17   | | }
     | |_^ this call modifies `a1` in-place
note: method defined here
    --> /home/pondnj/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/vec/mod.rs:2474:12
     |
2474 |     pub fn push(&mut self, value: T) {
     |            ^^^^
     = note: this error originates in the macro `define_language` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
  --> tests/array/mod.rs:5:1
   |
5  | / define_language! {
6  | |     pub enum ArrayLang {
7  | |         // lambda calculus:
8  | |         Lam(Slot, AppliedId) = "lam",
...  |
17 | | }
   | | ^- expected `()` because of default return type
   | |_|
   |   expected `()`, found `Vec<LanguageChildrenType>`
   |
   = note: expected unit type `()`
                 found struct `std::vec::Vec<slotted_egraphs::LanguageChildrenType>`
   = note: this error originates in the macro `define_language` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
    --> tests/chc/mod.rs:13:1
     |
13   | / define_language! {
14   | |     pub enum And {
15   | |         Var(Slot) = "var",
16   | |         And(Vec<AppliedIdOrStar>) = "and",
...    |
19   | | }
     | | ^
     | | |
     | |_expected `LanguageChildrenType`, found `()`
     |   arguments to this method are incorrect
     |
note: method `expandChildren` modifies its receiver in-place
    --> tests/chc/mod.rs:13:1
     |
13   | / define_language! {
14   | |     pub enum And {
15   | |         Var(Slot) = "var",
16   | |         And(Vec<AppliedIdOrStar>) = "and",
...    |
19   | | }
     | |_^ this call modifies `a0` in-place
note: method defined here
    --> /home/pondnj/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/vec/mod.rs:2474:12
     |
2474 |     pub fn push(&mut self, value: T) {
     |            ^^^^
     = note: this error originates in the macro `define_language` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
  --> tests/chc/mod.rs:13:1
   |
13 | / define_language! {
14 | |     pub enum And {
15 | |         Var(Slot) = "var",
16 | |         And(Vec<AppliedIdOrStar>) = "and",
...  |
19 | | }
   | | ^- expected `()` because of default return type
   | |_|
   |   expected `()`, found `Vec<LanguageChildrenType>`
   |
   = note: expected unit type `()`
                 found struct `std::vec::Vec<slotted_egraphs::LanguageChildrenType>`
   = note: this error originates in the macro `define_language` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
    --> tests/chc/mod.rs:71:1
     |
71   | / define_language! {
72   | |     pub enum CHC {
73   | |         Var(Slot) = "var",
74   | |         PredSyntax(AppliedId, Vec<Slot>) = "pred", //(pred P <$1>)
...    |
82   | | }
     | | ^
     | | |
     | |_expected `LanguageChildrenType`, found `()`
     |   arguments to this method are incorrect
     |
note: method `expandChildren` modifies its receiver in-place
    --> tests/chc/mod.rs:71:1
     |
71   | / define_language! {
72   | |     pub enum CHC {
73   | |         Var(Slot) = "var",
74   | |         PredSyntax(AppliedId, Vec<Slot>) = "pred", //(pred P <$1>)
...    |
82   | | }
     | |_^ this call modifies `a0` in-place
note: method defined here
    --> /home/pondnj/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/vec/mod.rs:2474:12
     |
2474 |     pub fn push(&mut self, value: T) {
     |            ^^^^
     = note: this error originates in the macro `define_language` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
  --> tests/chc/mod.rs:71:1
   |
71 | / define_language! {
72 | |     pub enum CHC {
73 | |         Var(Slot) = "var",
74 | |         PredSyntax(AppliedId, Vec<Slot>) = "pred", //(pred P <$1>)
...  |
82 | | }
   | | ^- expected `()` because of default return type
   | |_|
   |   expected `()`, found `Vec<LanguageChildrenType>`
   |
   = note: expected unit type `()`
                 found struct `std::vec::Vec<slotted_egraphs::LanguageChildrenType>`
   = note: this error originates in the macro `define_language` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
    --> tests/chc/mod.rs:71:1
     |
71   | / define_language! {
72   | |     pub enum CHC {
73   | |         Var(Slot) = "var",
74   | |         PredSyntax(AppliedId, Vec<Slot>) = "pred", //(pred P <$1>)
...    |
82   | | }
     | | ^
     | | |
     | |_expected `LanguageChildrenType`, found `()`
     |   arguments to this method are incorrect
     |
note: method `expandChildren` modifies its receiver in-place
    --> tests/chc/mod.rs:71:1
     |
71   | / define_language! {
72   | |     pub enum CHC {
73   | |         Var(Slot) = "var",
74   | |         PredSyntax(AppliedId, Vec<Slot>) = "pred", //(pred P <$1>)
...    |
82   | | }
     | |_^ this call modifies `a1` in-place
note: method defined here
    --> /home/pondnj/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/vec/mod.rs:2474:12
     |
2474 |     pub fn push(&mut self, value: T) {
     |            ^^^^
     = note: this error originates in the macro `define_language` (in Nightly builds, run with -Z macro-backtrace for more info)

error[E0308]: mismatched types
    --> tests/chc/mod.rs:71:1
     |
71   | / define_language! {
72   | |     pub enum CHC {
73   | |         Var(Slot) = "var",
74   | |         PredSyntax(AppliedId, Vec<Slot>) = "pred", //(pred P <$1>)
...    |
82   | | }
     | | ^
     | | |
     | |_expected `LanguageChildrenType`, found `()`
     |   arguments to this method are incorrect
     |
note: method `expandChildren` modifies its receiver in-place
    --> tests/chc/mod.rs:71:1
     |
71   | / define_language! {
72   | |     pub enum CHC {
73   | |         Var(Slot) = "var",
74   | |         PredSyntax(AppliedId, Vec<Slot>) = "pred", //(pred P <$1>)
...    |
82   | | }
     | |_^ this call modifies `a2` in-place
note: method defined here
    --> /home/pondnj/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/library/alloc/src/vec/mod.rs:2474:12
     |
2474 |     pub fn push(&mut self, value: T) {
     |            ^^^^
     = note: this error originates in the macro `define_language` (in Nightly builds, run with -Z macro-backtrace for more info)

For more information about this error, try `rustc --explain E0308`.
error: could not compile `slotted-egraphs` (test "entry") due to 27 previous errors
